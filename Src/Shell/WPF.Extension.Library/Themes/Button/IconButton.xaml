<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WPF.Extension.Library.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Assets/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="controls:IconButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource IconButtonText}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:IconButton">
                    <Grid x:Name="grid" Background="Transparent" Margin="{TemplateBinding Padding}" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid Width="{TemplateBinding RectangleDiameter}"
                              Height="{TemplateBinding RectangleDiameter}">
                            <Rectangle x:Name="border"
                                     Stroke="{DynamicResource IconButtonBorder}"
                                     StrokeThickness="{TemplateBinding RectangleStrokeThickness}"
                                     VerticalAlignment="Stretch" />
                            <Path x:Name="icon"
                                  Data="{TemplateBinding IconData}" 
                                  Width="{TemplateBinding IconWidth}"
                                  Height="{TemplateBinding IconHeight}"
                                  Fill="{TemplateBinding Foreground}"
                                  Stretch="Uniform" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Grid.Column="1" >
                            <TextBlock DataContext="{TemplateBinding Content}"
                                       Visibility="{Binding Converter={StaticResource NullOrEmptyStringToVisibilityConverter}, ConverterParameter=inverse}"
                                       Text="{Binding Converter={StaticResource ToLowerConverter}}"
                                       TextTrimming="CharacterEllipsis"
                                       Foreground="{TemplateBinding Foreground}"
                                       Margin="4,-1,0,0"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource IconButtonTextHover}" />
                            <Setter TargetName="border" Property="Fill" Value="{DynamicResource ButtonBackgroundHover}" />
                            <Setter TargetName="border" Property="Stroke" Value="{DynamicResource IconButtonBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource IconButtonTextPressed}" />
                            <Setter TargetName="border" Property="Stroke" Value="{DynamicResource IconButtonBorderPressed}" />
                            <Setter TargetName="border" Property="Fill" Value="{DynamicResource IconButtonIconBackgroundPressed}" />
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource IconButtonIconForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource IconButtonTextDisabled}" />
                            <Setter TargetName="border" Property="Stroke" Value="{DynamicResource IconButtonBorderDisabled}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="Stroke" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>